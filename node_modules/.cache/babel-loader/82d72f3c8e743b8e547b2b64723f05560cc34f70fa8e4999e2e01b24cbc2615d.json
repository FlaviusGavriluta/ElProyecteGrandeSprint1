{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java\\\\el-proyecte-grande-sprint-1-java-ChircuAndrei\\\\my-app\\\\src\\\\Pages\\\\ItemList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Loading from \"../Components/Loading\";\nimport ItemTable from \"../Components/ItemTable\";\nimport response from \"assert\";\n//import { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchItems = () => {\n  return fetch(`/items/`).then(res => res.json());\n};\nconst deleteItem = id => {\n  return fetch(`/items/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\nconst ItemList = () => {\n  _s();\n  //   const {sortBy, sortOrder} = useParams();\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState(null);\n  const handleDelete = id => {\n    deleteItem(id);\n    setItems(items => {\n      return items.filter(item => item.id !== id);\n    });\n  };\n  useEffect(() => {\n    fetchItems().then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(items => {\n      // Handle the data received from the backend\n      setLoading(false);\n      setItems(items);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  //sortBy, sortOrder\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ItemTable, {\n    items: items,\n    onDelete: handleDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n_s(ItemList, \"PmojGX3H3xx275to8GHRaN60wFY=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["useEffect","useState","Loading","ItemTable","response","jsxDEV","_jsxDEV","fetchItems","fetch","then","res","json","deleteItem","id","method","ItemList","_s","loading","setLoading","items","setItems","handleDelete","filter","item","ok","Error","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","_c","$RefreshReg$"],"sources":["D:/Java/el-proyecte-grande-sprint-1-java-ChircuAndrei/my-app/src/Pages/ItemList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Loading from \"../Components/Loading\";\r\nimport ItemTable from \"../Components/ItemTable\";\r\nimport response from \"assert\";\r\n//import { useParams } from \"react-router-dom\";\r\n\r\nconst fetchItems = () => {\r\n    return fetch(`/items/`).then((res) => res.json());\r\n};\r\nconst deleteItem = (id) => {\r\n    return fetch(`/items/${id}`, { method: \"DELETE\" }).then((res) =>\r\n        res.json()\r\n    );\r\n};\r\n\r\nconst ItemList = () => {\r\n //   const {sortBy, sortOrder} = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState(null);\r\n    const handleDelete = (id) => {\r\n        deleteItem(id);\r\n\r\n        setItems((items) => {\r\n            return items.filter((item) => item.id !== id);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchItems()\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(items => {\r\n                // Handle the data received from the backend\r\n                setLoading(false);\r\n                setItems(items);\r\n            })\r\n            .catch(error => {\r\n                console.error('Fetch error:', error);\r\n            });\r\n    }, []);\r\n//sortBy, sortOrder\r\n    if (loading) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return <ItemTable items={items} onDelete={handleDelete} />;\r\n};\r\n\r\nexport default ItemList;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,QAAQ;AAC7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,OAAOC,KAAK,CAAE,SAAQ,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AACrD,CAAC;AACD,MAAMC,UAAU,GAAIC,EAAE,IAAK;EACvB,OAAOL,KAAK,CAAE,UAASK,EAAG,EAAC,EAAE;IAAEC,MAAM,EAAE;EAAS,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IACxDA,GAAG,CAACC,IAAI,CAAC,CACb,CAAC;AACL,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACG,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMoB,YAAY,GAAIR,EAAE,IAAK;IACzBD,UAAU,CAACC,EAAE,CAAC;IAEdO,QAAQ,CAAED,KAAK,IAAK;MAChB,OAAOA,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZO,UAAU,CAAC,CAAC,CACPE,IAAI,CAAEL,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACoB,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOrB,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACU,KAAK,IAAI;MACX;MACAD,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACV;EACI,IAAIV,OAAO,EAAE;IACT,oBAAOX,OAAA,CAACJ,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAEA,oBAAO1B,OAAA,CAACH,SAAS;IAACgB,KAAK,EAAEA,KAAM;IAACc,QAAQ,EAAEZ;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAAChB,EAAA,CAnCID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}